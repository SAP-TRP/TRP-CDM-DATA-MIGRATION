PROCEDURE  "sap_trp_db_p_ext_cdm_migration_resources"()
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
AS
BEGIN

DECLARE re_last_update_time timestamp;
DECLARE rs_last_update_time timestamp;
DECLARE rch_last_update_time timestamp;
DECLARE ra_last_update_time timestamp;
DECLARE rd_last_update_time timestamp;
DECLARE et_last_update_time timestamp;
DECLARE rc_last_update_time timestamp;
DECLARE tolerance VARCHAR(500) default '1';
DECLARE lv_count INTEGER;


SELECT max(changedon) INTO re_last_update_time FROM  "SAP_TRP_DB_RESOURCES";
SELECT max(changedon) INTO rs_last_update_time FROM  "SAP_TRP_DB_RESOURCESTATUS";
SELECT max(changedon) INTO rch_last_update_time FROM  "SAP_TRP_DB_RESOURCECHANGEHISTORIES";
SELECT max(changedon) INTO rd_last_update_time FROM  "SAP_TRP_DB_RESOURCEDOWNTIMES";
SELECT max(changedon) INTO et_last_update_time FROM  "SAP_TRP_DB_EQUIPMENTTYPES";
SELECT max(changedon) INTO rc_last_update_time FROM  "SAP_TRP_DB_RESOURCECATEGORY";

SELECT COUNT(*) INTO lv_count
FROM "sap.tm.trp.db.systemmanagement.customization::t_general_parameters"
WHERE name = 'cdm_delta_tolerance';
IF :lv_count = 1 THEN
SELECT CASE
        WHEN value = 'X' THEN 0.5
        ELSE value
    END AS tolerance INTO tolerance --User is expected to maintain value in hrs default is 30mins
FROM "sap.tm.trp.db.systemmanagement.customization::t_general_parameters"
WHERE name = 'cdm_delta_tolerance';
END IF;

    upsert "SAP_TRP_DB_RESOURCES"
    SELECT
        t1.log_sys AS sysid,
        t1.resource_id,
        t1.resource_name AS name,
        t3.locid AS locationid,
        t1.restype AS resourcetype,
        t1.res_class AS resourceclass,
        t1.equitype AS equipentgroup,
		t1.resource_type_code AS equipmentcode,
        t2.block_status_code AS planingblockstatus,
        t1.ownership_code AS ownershipcode,
        t1.lease_contract_ref AS leasecontract,
        t1.special_instruction AS instruction,
        t1.teu_count AS teucount,
        CASE to_timestamp(t1.off_hire_dt)
            WHEN ''
            THEN NULL
            ELSE to_timestamp(t1.off_hire_dt)
        END AS offhiredate,
        t1.off_hire_loc AS offhirelocation,
        CASE to_timestamp(t1.on_hire_dt)
            WHEN ''
            THEN NULL
            ELSE to_timestamp(t1.on_hire_dt)
        END AS onhiredate,
        t1.on_hire_loc AS onhirelocation,
        to_timestamp(t1.changedate) AS changedon,
        t3.changeuser AS changedby  FROM "sap.tm.trp.db.semantic.resource::v_resource_master" t1
	INNER JOIN "sap.tm.trp.db.semantic.resource::v_resource_status" t2
    ON  t1.resource_id=t2.resource_id AND t1.log_sys=t2.log_sys
	INNER JOIN "sap.tm.trp.db.semantic::/sapapo/res_head" AS t3
    ON t1.resource_id = t3.resuid AND t1.mandt = t3.mandt AND t1.log_sys=t3.log_sys
    WHERE (:re_last_update_time IS NULL OR to_timestamp(t1.changedate) > add_seconds(:re_last_update_time,-1*60*60*:tolerance));

    upsert "SAP_TRP_DB_RESOURCESTATUS"
    SELECT
        log_sys AS sysid,
        resource_id AS resourceid,
        movement_status_code AS movementstatus,
        loading_status_code AS loadingstatus,
        to_timestamp(changed_on) AS changedon,
        gti_on AS gateinon,
        current_location AS currentlocation,
        current_location_id AS currentlocationid
    FROM "sap.tm.trp.db.semantic.resource::v_resource_status"
    WHERE (:rs_last_update_time IS NULL OR to_timestamp(changed_on) > add_seconds(:re_last_update_time,-1*60*60*:tolerance));

    upsert "SAP_TRP_DB_RESOURCECHANGEHISTORIES"
    SELECT
        t1.log_sys AS sysid,
        db_key AS changekey,
        t3.resid AS resourceid,
        t2.scuguid22 AS locationid,
        trk_cat AS changecategory,
        to_timestamp(trk_log_time) AS changedon,
        log_table AS changedtable,
        log_field AS changedfield,
        value_new AS newvalue,
        value_old AS oldvalue
    FROM "sap.tm.trp.db.semantic::/trp/res_trklog" t1
    INNER JOIN "sap.tm.trp.db.semantic::/scmb/toentity" t2 ON t1.location_uuid = t2.scuguid AND t1.log_sys = t2.log_sys
    INNER JOIN "sap.tm.trp.db.semantic::/scmb/restmshd" t3 ON t1.resource_id = t3.tmsresuid AND t1.log_sys = t3.log_sys
    WHERE (:rch_last_update_time IS NULL OR to_timestamp(trk_log_time) > add_seconds(:rch_last_update_time,-1*60*60*:tolerance));

    upsert "SAP_TRP_DB_RESOURCEDOWNTIMES"
    SELECT
        t1.log_sys AS sysid,
        t1.downid AS downtimeid,
        t1.resource_id AS resourceid,
        t1.location_id AS locationid,
        to_timestamp(t1.begin_timestamp) AS downtimefrom,
        to_timestamp(t1.end_timestamp) AS downtimeto,
        to_timestamp(t2.changedate) AS changedon
    FROM "sap.tm.trp.db.semantic.resource::v_resource_downtime" t1
    INNER JOIN "sap.tm.trp.db.semantic.resource::v_resource_master" t2
        ON t1.resource_id=t2.resource_id
    WHERE (:rd_last_update_time IS NULL OR to_timestamp(t2.changedate) > add_seconds(:rd_last_update_time,-1*60*60*:tolerance));

    upsert "SAP_TRP_DB_EQUIPMENTTYPES" --Change to v_resource_type
    SELECT
        log_sys AS sysid,
        equi_type AS equipmentgroup,
        resource_type_code AS equipmentcode,
        resource_type_desc AS description,
        teu_count AS teucount,
        NULL AS changedon
    FROM "sap.tm.trp.db.semantic.resource::v_resource_type" WHERE resource_category='CN';
    --where (:rd_last_update_time IS NULL OR TO_TIMESTAMP(T2.CHANGEDATE) > ADD_SECONDS(:rd_last_update_time,-1*60*60*:tolerance));

    upsert "SAP_TRP_DB_RESOURCECATEGORY"
    SELECT
        t1.code AS code,
        t1.mapping_code AS mappingcode,
        t1.desc AS description,
        NULL AS changedon,
        '' AS sysid
    FROM "sap.tm.trp.db.semantic.resource::v_resource_category" t1;
    --where (:rc_last_update_time IS NULL OR TO_TIMESTAMP(T3.CHANGED_ON) > ADD_SECONDS(:et_last_update_time,-1*60*60*:tolerance));

    --json collection - resource
    -- SELECT COUNT(1) INTO res_cnt FROM RESOURCE;
    -- IF :res_cnt > 0 THEN
    --     SELECT "Attributes"."CHANGEDATE" INTO res_last_update_time FROM RESOURCE ORDER BY "Attributes"."CHANGEDATE" DESC LIMIT 1;
    --     RES_IDS=SELECT DISTINCT RESOURCE_ID FROM RESOURCE;
    -- END IF;

    upsert "SAP_TRP_DB_RESOURCEATTRIBUTES"
    SELECT log_sys AS sysid, resource_id AS resourceid, json_query('{"RESOURCE_NAME": "' || RESOURCE_NAME || '",'|| +
	' "RESOURCE_TYPE_CODE": "'|| RESOURCE_TYPE_CODE  || '",'|| +
	' "TARE_WEIGHT": "'|| TARE_WEIGHT  || '",'|| +
	' "MAX_GROSS_WEIGHT": "'|| MAX_GROSS_WEIGHT  || '",'|| +
	' "MAX_GROSS_WEIGHT_UOM": "'|| MAX_GROSS_WEIGHT_UOM  || '",'|| +
	' "MAX_CARGO_WEIGHT": "'|| PAYLOAD_WEIGHT  || '",'|| +
	' "INSIDE_LENGTH": "'|| INTERNAL_LENGTH  || '",'|| +
	' "INSIDE_HEIGHT": "'|| INTERNAL_HEIGHT  || '",'|| +
	' "DOOR_WIDTH": "'|| DOOR_WIDTH  || '",'|| +
	' "DOOR_HEIGHT": "'|| DOOR_HEIGHT  || '",'|| +
	' "MAX_LENGTH": "'|| MAX_LENGTH  || '",'|| +
	' "VOLUME": "'|| CUBIC_CAPACITY  || '",'|| +
	' "TEU_COUNT": "'|| TEU_COUNT  || '",'|| +
	' "PLN_BLOCK": "'|| PLN_BLOCK  || '",'|| +
	' "RESOURCE_CONDITION": "'|| RESOURCE_CONDITION  || '",'|| +
    ' "FOOD_GRADE": "'|| FOOD_GRADE_IND || '",'|| +
    ' "LEASING_ID": "'|| LEASE_CONTRACT_REF  || '",'|| +
    ' "TEMP_CTRL_MIN": "'|| TEMP_CTRL_MIN  || '",'|| +
    ' "TEMP_CTRL_MAX": "'|| TEMP_CTRL_MAX  || '",'|| +
    ' "SPECIAL_INSTRUCTION": "'|| SPECIAL_INSTRUCTION  || '",'|| +
    ' "EXTNL_CLADDING": "'|| EXTNL_CLADDING  || '",'|| +
    ' "CNTRL_ATM": "'|| CNTRL_ATM  || '",'|| +
    ' "USDA": "'|| USDA  || '",'|| +
    ' "COOLING_UNIT_MNFTR": "'|| COOLING_UNIT_MNFTR  || '",'|| +
    ' "COOLING_UNIT_MODEL": "'|| COOLING_UNIT_MODEL  || '",'|| +
    ' "DESHUMIDIFY": "'|| DESHUMIDIFY  || '",'|| +
    ' "DATACORDER": "'|| DATACORDER  || '",'|| +
    ' "OFF_HIRE_DT": "'|| OFF_HIRE_DT  || '",'|| +
    ' "ON_HIRE_DT": "'|| ON_HIRE_DT  || '",'|| +
    ' "BUILDDATE": "'|| BUILDDATE  || '",'|| +
    ' "MAX_WIDTH": "'|| MAX_WIDTH  || '",'|| +
    ' "CHANGEDATE": "'|| CHANGEDATE  || '",'|| +
    ' "MAX_HEIGHT": "'|| max_height  || +
    '"}}','$') AS jsonattributes, to_timestamp(t1.changedate) AS changedon
    FROM "sap.tm.trp.db.semantic.resource::v_resource_master" t1
    WHERE (:re_last_update_time IS NULL OR to_timestamp(changedate) > add_seconds(:re_last_update_time,-1*60*60*1));

END;